{"version":3,"sources":["pages/HomePage.tsx","components/Header.tsx","service/Service.ts","components/WineCard.tsx","components/WineCardCarousel.tsx","components/ContactFooter.tsx","components/PriceList.tsx","pages/PricesPage.tsx","pages/WinesPage.tsx","components/AboutCard.tsx","pages/AboutUsPage.tsx","Routes.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Header","props","menu","map","val","key","to","label","children","className","src","logoImg","alt","Service","infoWine","wine","imgUrl","process","contacts","infoAuthor","contact","icon","menuInfo","items","WineCard","textTitle","title","textContent","content","footer","price","imageSrc","WineCardCarousel","wineList","ContactFooter","contactInfo","onClick","window","open","linkTo","service","retryNumber","numbers","i","r","Math","round","random","includes","push","rnd","wines","length","filter","index","Boolean","name","description","HomePage","author","PriceListSection","item","PriceList","section","PricesPage","sections","forEach","type","convertWines","WinePage","AboutCard","AboutUsPage","about","Routes","path","component","exact","WinesPage","App","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b82455a8.chunk.js","sourcesContent":["import React from 'react';\nimport Header from '../components/Header';\nimport Service from '../service/Service';\nimport WineCardCarousel from '../components/WineCardCarousel';\nimport ContactFooter from '../components/ContactFooter';\nconst service = new Service();\n\nconst retryNumber = (numbers: number[]) => {\n    for (let i = 0; i < 10; i++) {\n        const r = Math.round(Math.random() * 1000) % 4;\n        if (!numbers.includes(r)) {\n            numbers.push(r);\n            return;\n        }\n    }\n}\n\nconst rnd: number[] = [];\nfor (let i = 0; i < 2; i++) {\n    const r = Math.round(Math.random() * 1000) % service.wines.length;\n    if (rnd.includes(r)) {\n        retryNumber(rnd);\n    } else {\n        rnd.push(r);\n    }\n}\nconst wines = service.wines.filter((wine, index, wines) => {\n    return Boolean(rnd.includes(index));\n});\n\nconst wineList = wines.map(wine => {\n    return {\n        imageSrc: wine.imgUrl,\n        title: wine.name,\n        content: wine.description,\n        price: wine.price\n    }\n});\n\nconst HomePage: React.FC = () => {\n    return <>\n        <Header menu={service.menu} logoImg={service.logoImg} />\n        <main>\n            <div className=\"pageWrapper\">\n                <WineCardCarousel wineList={wineList} />\n            </div>            \n        </main>\n        <footer>\n            <ContactFooter \n                contacts={service.author.contacts}\n            />\n        </footer>        \n    </>;\n}\n\nexport default HomePage;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Header.css';\n\nexport interface HeaderProps {\n    menu: {\n       label: string\n       to: string \n    }[]\n    logoImg: string\n}\n\nexport const Header : React.FC <HeaderProps> = (props: HeaderProps) => {\n    const menu = props.menu.map(val => {\n        return <Link\n            key={val.to+val.label}\n            to={val.to}\n            children={val.label}\n        />;\n    });\n\n    return <header className=\"header-comp\">\n        \n        <div className=\"logoWrapper\">\n            <img \n                className=\"logoImg\"\n                src={props.logoImg}\n                alt=\"Simples Vinhos Logo\">\n            </img>\n        </div>\n        <div className=\"navWrapper\">\n            <nav>\n                {menu}\n            </nav>\n        </div>\n\n    </header>;\n};\n\nexport default Header;","import infoAuthor from '../config/InfoAuthor.json';\nimport infoWine from '../config/InfoWine.json';\nimport menuInfo from '../config/Menu.json';\n\nexport interface Wine {\n    name: string\n    type: string\n    description: string\n    imgUrl: string\n    price: number\n}\n\nexport interface ContactInfo {\n    label: string;\n    icon: string;\n    linkTo: string;\n}\n\nexport interface Author {\n    name: string\n    about: string\n    imgUrl: string\n    contacts: ContactInfo[];\n}\n\nexport interface MenuItem {\n    label: string\n    to: string\n}\n\nexport default class Service {\n\n    public get wines() : Wine[] {\n        return infoWine.map(wine => { \n            return { ...wine, imgUrl: process.env.PUBLIC_URL+\"/images/\"+wine.imgUrl };\n        });\n    }\n\n    public get author() : Author {\n        const contactList = infoAuthor.contacts;\n        const contacts = contactList.map(contact => {\n            return {\n                ...contact,\n                icon: process.env.PUBLIC_URL+\"/icons/\"+contact.icon\n            };\n        });\n\n        return { \n            ...infoAuthor,\n            contacts,\n            imgUrl: process.env.PUBLIC_URL+\"/images/\"+infoAuthor.imgUrl\n        };\n    }\n\n    public get menu() : MenuItem[] {\n        return menuInfo.items;\n    }\n\n    public get logoImg() : string {\n        return process.env.PUBLIC_URL+\"/images/SimplesLogo.png\";\n    }\n\n}","import React from 'react';\nimport './WineCard.css';\n\nexport interface WineCardProps {\n    imageSrc: string\n    title: string\n    content: string\n    price: number\n}\n\nconst WineCard: React.FC<WineCardProps> = (props: WineCardProps) => {\n    const textTitle = <div className=\"textTitle\">\n        <h1>{props.title}</h1>\n    </div>;\n\n    const textContent = <div className=\"textContent\">\n        {props.content}\n    </div>;\n    \n    const footer = props.price <= 0 ? '' : <div className=\"textFooter\">\n        <span className=\"priceLabel\">Preço:</span>\n        <span className=\"priceValue\">R$ {props.price}</span>\n    </div>;\n\n    return <div className=\"wineCard-comp\" >\n        <div className=\"imgHolder\">\n            <img \n                src={props.imageSrc}\n                alt=\"Foto Vinho\"\n            >\n            </img>\n        </div>\n        <div className=\"textInfo\">\n            <div className=\"innerTextContainer\">\n                { textTitle }\n                { textContent }                \n            </div>\n            { footer }\n        </div>\n    </div>;\n};\n\nexport default WineCard;","import React from 'react';\nimport WineCard from './WineCard';\nimport './WineCardCarousel.css';\n\nexport interface WineCardCarouselProps {\n    wineList: {\n        imageSrc: string;\n        title: string;\n        content: string;\n        price: number;\n    }[];\n}\n\nconst WineCardCarousel : React.FC<WineCardCarouselProps> = (props: WineCardCarouselProps) => {\n    const { wineList } = props;\n    \n    return <div className=\"wineCardCarousel-comp\">\n        {\n        wineList.map(wine => {\n            return <div className=\"wineCardContainer\" key={wine.title+wine.price}>\n                <WineCard\n                    imageSrc={wine.imageSrc}\n                    title={wine.title}\n                    content={wine.content}\n                    price={wine.price}                    \n                />\n            </div>;\n        })\n        }        \n    </div>;\n}\n\nexport default WineCardCarousel;","import React from 'react';\nimport './ContactFooter.css';\nimport { ContactInfo } from '../service/Service';\n\n\nexport interface ContactFooterProps {\n    contacts: ContactInfo[];\n    fixed?: boolean;\n}\n\nconst ContactFooter: React.FC<ContactFooterProps> = (props: ContactFooterProps) => {\n    const content = props.contacts.map(contactInfo => {\n        return <div \n            className=\"contactImgContainer\"\n            key={contactInfo.label+contactInfo.icon}\n            onClick={() => {\n                window.open(contactInfo.linkTo, \"_blank\");\n            }}>\n            <img                \n                src={contactInfo.icon}\n                alt={contactInfo.label}                \n            ></img>\n        </div>;\n    });\n    \n    return <div className={\"contactFooter-comp fixedPosition\"}>\n        <div className=\"contactFooterContainer\">\n            { content }\n        </div>\n    </div>\n}\n\nexport default ContactFooter;","import React from 'react';\nimport './PriceList.css';\n\nexport interface PriceListSectionProps {\n    title: string;\n    items: {\n        name: string;\n        price: number;\n    }[];\n}\n\nexport const PriceListSection: React.FC<PriceListSectionProps> = (props) => {\n    return <div className=\"priceListSectionContainer\">\n        <div className=\"priceListSectionTitle\">\n            <span className=\"headerDivider\" >\n            </span>\n            <span className=\"titleContainer\">\n                <h1>{props.title}</h1>\n            </span>\n        </div>\n        <div className=\"priceListItemsContainer\">\n        {props.items.map(item => {\n            return <div className=\"priceListItem\" key={item.name+item.price}>\n                <span className=\"itemName\">{item.name}</span>\n                <span className=\"itemPrice\">R$ {item.price}</span>\n            </div>;\n        })}\n        </div>\n    </div>;\n}\n\nexport interface PriceListProps {\n    items: PriceListSectionProps[];\n}\n\nconst PriceList: React.FC<PriceListProps> = (props: PriceListProps) => {\n    return <div className=\"priceList-comp\">\n        <div className=\"priceListContainer\">\n            {props.items.map(section => {\n                return <PriceListSection key={section.title} {...section} />\n            })}\n        </div>\n    </div>;\n};\n\nexport default PriceList;","import React from 'react';\nimport Header from '../components/Header';\nimport PriceList, { PriceListSectionProps } from '../components/PriceList';\nimport Service, { Wine } from '../service/Service';\nimport ContactFooter from '../components/ContactFooter';\nconst service = new Service();\n\nconst convertWines = (wines: Wine[]): PriceListSectionProps[] => {\n    const sections: string[] = [];\n    wines.forEach(wine => {\n        if(!sections.includes(wine.type)) {\n            sections.push(wine.type);\n        }\n    });\n    const listProps = sections.map(section => {\n        const title = section;\n        const items = wines\n            .filter(wine => section === wine.type)\n            .map(wine => {\n                const { name, price } = wine;\n                return { name, price };\n            });\n        return { title, items };\n    });\n    return listProps;\n}\n\nconst PricesPage: React.FC = () => {\n    const wineList = convertWines(service.wines);\n\n    return <>\n        <Header menu={service.menu} logoImg={service.logoImg} />\n        <main>\n            <div className=\"pageWrapper\">\n                <PriceList items={wineList} />\n            </div>\n        </main>\n        <footer>\n            <ContactFooter \n                contacts={service.author.contacts}\n            />\n        </footer>\n    </>;\n}\n\nexport default PricesPage;","import React from 'react';\nimport Header from '../components/Header';\nimport WineCardCarousel from '../components/WineCardCarousel';\nimport Service from '../service/Service';\nimport ContactFooter from '../components/ContactFooter';\nconst service = new Service();\n\nconst WinePage : React.FC = () => {\n    const wineList = service.wines.map(wine => {\n        return {\n            imageSrc: wine.imgUrl,\n            title: wine.name,\n            content: wine.description,\n            price: wine.price\n        }\n    });\n\n    return <>\n        <Header menu={service.menu} logoImg={service.logoImg} />\n        <main>\n            <div className=\"pageWrapper\">\n                <WineCardCarousel wineList={wineList} />\n            </div>\n        </main>\n        <footer>\n            <ContactFooter \n                contacts={service.author.contacts}\n            />\n        </footer>\n    </>;\n}\n\nexport default WinePage;","import React from 'react';\nimport './AboutCard.css';\n\nexport interface AboutCardProps {\n    imageSrc: string;\n    title: string;\n    content: string;\n}\n\nconst AboutCard: React.FC<AboutCardProps> = (props: AboutCardProps) => {\n    return <div className=\"aboutCard-comp\">\n        <div className=\"aboutCardContainer\">\n            <div className=\"imgHolder\">\n                <img \n                    src={props.imageSrc}\n                    alt=\"Foto Vinho\"\n                ></img>\n            </div>\n            <div className=\"textHolder\">\n                <h1>{ props.title }</h1>\n                <p>{ props.content }</p>\n            </div>\n        </div>\n    </div>;\n}\n\nexport default AboutCard;","import React from 'react';\nimport Header from '../components/Header';\nimport Service from '../service/Service';\nimport AboutCard from '../components/AboutCard';\nimport ContactFooter from '../components/ContactFooter';\nconst service = new Service();\nconst author = service.author;\n\nconst AboutUsPage : React.FC = () => {   \n    return <>\n        <Header menu={service.menu} logoImg={service.logoImg} />\n        <main>\n            <div className=\"pageWrapper\">\n                <AboutCard \n                    title={author.name}\n                    imageSrc={author.imgUrl}\n                    content={author.about}\n                />\n            </div>\n        </main>\n        <footer>\n            <ContactFooter \n                contacts={service.author.contacts}\n            />\n        </footer>      \n    </>;\n}\n\nexport default AboutUsPage;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport PricesPage from './pages/PricesPage';\nimport WinesPage from './pages/WinesPage';\nimport AboutUsPage from './pages/AboutUsPage';\n\nexport default function Routes(){\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route path=\"/home\" component={HomePage} exact/>\n                <Route path=\"/carta\" component={PricesPage} exact/>\n                <Route path=\"/vinhos\" component={WinesPage} exact/>\n                <Route path=\"/sobre\" component={AboutUsPage} exact/>\n                <Route path=\"\" component={HomePage} />\n            </Switch>\n        </BrowserRouter>\n    );\n}","import React from 'react';\nimport logo from './logo.svg';\nimport Routes from './Routes';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Routes />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}